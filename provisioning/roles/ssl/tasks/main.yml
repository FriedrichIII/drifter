- name: create CA directories
  file: dest={{ ssl_root_dir }}/{{ item }} state=directory
  with_items: [ certs, db, private, config ]
  become: yes

- name: create database index
  file: dest={{ ssl_root_dir }}/db/index state=touch
  become: yes

- name: create crlnumber
  shell: echo 1001 > {{ ssl_root_dir }}/db/crlnumber creates="{{ ssl_root_dir }}/db/crlnumber"
  become: yes

- name: create serial
  shell: openssl rand -hex 16 > {{ ssl_root_dir }}/db/serial creates="{{ ssl_root_dir }}/db/serial"
  become: yes


- name: create the CA config file
  template: src=ca.cnf dest={{ ssl_ca_conf_file }}
  register: ca_config
  become: yes

- name: create the config file
  template: src=vagrant.cnf dest={{ ssl_conf_file }}
  register: cert_config
  become: yes

- name: create the EXT config file
  template: src=vagrant.ext dest={{ ssl_ext_file }}
  register: ext_config
  become: yes

- name: cleanup files upon CA change
  file: dest={{ item }} state=absent
  with_items:
    - "{{ ssl_ca_csr_file }}"
    - "{{ ssl_ca_cert_file }}"
  when: ca_config.changed
  become: yes

- name: cleanup files upon config change
  file: dest={{ item }} state=absent
  with_items:
    - "{{ ssl_key_file }}"
    - "{{ ssl_csr_file }}"
    - "{{ ssl_cert_file }}"
  when: ca_config.changed or cert_config.changed or ext_config.changed
  become: yes

- name: create CA key file
  shell: openssl req -new -config {{ ssl_ca_conf_file }} -out {{ ssl_ca_csr_file }} -keyout {{ ssl_ca_key_file }} creates="{{ ssl_ca_csr_file }}"
  become: yes

- name: create CA cert
  shell: openssl ca -batch -selfsign -config {{ ssl_ca_conf_file }} -in {{ ssl_ca_csr_file }} -out {{ ssl_ca_cert_file }} -extensions ca_ext creates="{{ ssl_ca_cert_file }}"
  become: yes


- name: create key file
  shell: openssl genrsa -3 -out {{ ssl_key_file }} 2048 creates="{{ ssl_key_file }}"
  become: yes

- name: create the csr
  shell: openssl req -new -config {{ ssl_conf_file }} -key {{ ssl_key_file }} -out {{ ssl_csr_file }} creates="{{ ssl_csr_file }}"
  become: yes

- name: create the certificate
  shell: openssl ca -batch -config {{ ssl_ca_conf_file }} -in {{ ssl_csr_file }} -out {{ ssl_cert_file }} -extensions csr_ext creates="{{ ssl_cert_file }}"
  become: yes

- name: copy CA to project dir
  shell: cp -f {{ ssl_ca_cert_file }} {{ root_directory }}
  become: yes
